
UDP шлюз для DHT22
С заданной периодичностью читает с датчиков и сохраняет результаты в буфер. По
запросу клиента сразу возвращает результат из буфера. Датчики могут управляться
с разных потоков. Каждый поток с определенной периодичностью одновременно(параллельно)
читает со всех своих датчиков. Количество подключаемых датчиков не ограничивается программой.
Есть возможность линейной коррекции и фильтрации измерений.


1 Установка
1.1 Требования
Скрипт-установщик работает в командной оболочке bash.
1.2 Настройка перед установкой:
- место установки исполняемого файла: файл build.sh константа INST_DIR
- место установки файла конфигурации: файл build.sh константа CONF_DIR (должна соответствовать CONF_DIR из main.h)
- см. ./lib/help/gpio
1.3 Команды для установки:
cd gwu22pc
Полная установка:
sudo ./build.sh full
Полная установка, не затрагивая конфигурационных файлов:
sudo ./build.sh full_nc
Для тестирования (файлы не копируются за пределы текущей папки):
sudo ./build.sh part_debug

2 Настройка после установки:
Общие настройки демон читает из файла CONF_MAIN_FILE (main.h),
 где
 port - порт (должен быть уникальным в рамках хоста);
Настройки для датчиков демон читает из файла CONF_DEVICE_FILE (main.h):
 где
 pin - физический номер порта к которому подключен датчик;
 channel_id_temp - уникальный номер канала, которому будет соответствовать температура с датчика (выбирается произвольно, 
 в дальнейшем, по нему можно будет получить значение температуры с датчика на данном порте);
 channel_id_hum - уникальный номер канала, которому будет соответствовать влажность с датчика (выбирается произвольно, 
 в дальнейшем, по нему можно будет получить значение влажности с датчика на данном порте);
Настройки для потоков демон читает из файла CONF_THREAD_FILE (main.h):
 где
 id - идентификатор потока (целое число; задается произвольно; нельзя повторять);
 cd_sec и cd_nsec - минимальная продолжительность цикла чтения со всех датчиков потока;
Для привязки датчиков к потокам служит файл CONF_THREAD_DEVICE_FILE (main.h):
 где
 thread_id - идентификатор потока (соответствует id из файла CONF_THREAD_FILE);
 device_pin - идентификатор датчика (соответствует pin из файла CONF_DEVICE_FILE; нельзя повторять в файле);
Не читайте с датчиков, подключенных к одним и тем же портам с разных потоков (например, датчики с порта PA нужно назначить 
на один поток, с порта PB - на другой, либо все - на один поток).
Настройки для линейной коррекции измерений:
 см. ./lib/help/lcorrection
Настройки для фильтрации измерений:
 см. ./lib/help/filter
3 Запуск
При полной установке запускается автоматически, вмести с операционной системой.
sudo gwu22pc
В режиме отладки (не отключается от терминала и выдает сообщения):
sudo gwu22pc_dbg
Если приложение установлено для тестирования:
sudo ./gwu22pc_dbg

4 Управление
4.1 Список команд
см. ./util.c printHelp()

4.2 Графический интерфейс пользователя
для чтения результатов измерений:
https://github.com/arinichevN/monitor_cl 
для отправки общих для всех демонов команд:
https://github.com/arinichevN/app_cl

4.3 Примеры
Для рассылки udp пакетов используется утилита udpcl (https://github.com/arinichevN/udpcl)
Утилита netcat не подходит, так как разрывает пакеты, встречая символ '\n'
Параметры утилиты udpcl следует заменить на свои.
перезагрузка с чтением всех настроек:
udpcl ars '' 192.168.1.250 49162 2
запрос на чтение для каналов №1 и №2:
udpcl gfts '1\n2\n' 192.168.1.250 49162 2

